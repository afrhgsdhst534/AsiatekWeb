üõ† Project Overview ‚Äì Asiatek (asiatek.pro)

Goal: Rebuild the existing auto parts ordering website using clean, modular code with proper backend logic, working UX flows, and production-level robustness.

Tech Stack (preferred):
	‚Ä¢	Frontend: React + TailwindCSS
	‚Ä¢	Backend: Node.js (Express) + PostgreSQL
	‚Ä¢	Auth: Email + PKCE flow
	‚Ä¢	Language: Russian-only interface

‚∏ª

üåê Website Pages & UX Flows

1. Homepage (/)

UX Purpose: Simple intro + redirection to the main form.

Functionality:
	‚Ä¢	Nav menu (Home, Order, Contact, Account/Login)
	‚Ä¢	Hero with CTA button ‚Üí /order
	‚Ä¢	Responsive layout
Link screenshot of homepage here

‚∏ª

2. Order Form (/order)

UX: Multi-step form with a progress bar (4 steps). All form data is validated and stored centrally before final submission.

Step 1: Vehicle Type
	‚Ä¢	Options: Passenger / Commercial / Chinese
	‚Ä¢	Select to continue
	‚Ä¢	Highlight active choice

Step 2: Vehicle Info
	‚Ä¢	If Chinese ‚Üí skip VIN
	‚Ä¢	Else:
	‚Ä¢	VIN (17-char validation)
	‚Ä¢	Or: Manual entry (Make, Model, Year, Engine Volume, Fuel Type)

Step 3: Parts
	‚Ä¢	Add 1+ parts dynamically:
	‚Ä¢	Part name (required)
	‚Ä¢	Quantity (with + / ‚Äì)
	‚Ä¢	Extra info: Comment, SKU, Brand
	‚Ä¢	Can delete entries

Step 4: Contact Info
	‚Ä¢	Name, Email, Phone (see below), City
	‚Ä¢	Optional order comment
	‚Ä¢	If guest: Ask to create password + confirm password

Key UX Details:
	‚Ä¢	Navigation: Next / Back buttons with step validation
	‚Ä¢	Progress bar (shows current step)
	‚Ä¢	Final modal with success confirmation

‚∏ª

3. Phone Input Component

Critical UX Component
	‚Ä¢	Country code selector (dropdown with flags, searchable)
	‚Ä¢	Auto-format by country (Russia: XXX XXX XX XX, etc.)
	‚Ä¢	Input limited by valid digit count
	‚Ä¢	Manual editing of country code updates flag
	‚Ä¢	Hover shows format hint
	‚Ä¢	Works seamlessly on mobile & desktop

‚∏ª

4. Auth System

Pages: /login, /register, /auth/reset-password, etc.

Flow:
	‚Ä¢	Register new users with email confirmation
	‚Ä¢	Login with email/password
	‚Ä¢	Reset password via email
	‚Ä¢	Auto-login after guest order registration
	‚Ä¢	Redirect from protected pages
	‚Ä¢	Token expiration handling

Security: PKCE, secure token storage, error handling for invalid or expired links

‚∏ª

5. Guest Order Logic

Smart UX for unregistered users:
	‚Ä¢	If email exists ‚Üí prompt to log in
	‚Ä¢	If not:
	‚Ä¢	Auto-create account with password
	‚Ä¢	Auto-login
	‚Ä¢	Link order to new user
	‚Ä¢	Always connect order with a user ID

‚∏ª

6. User Dashboard (/dashboard)

Post-login panel:
	‚Ä¢	View user info
	‚Ä¢	See list of orders (status, vehicle, parts)
	‚Ä¢	Create new order
	‚Ä¢	Logout

Order Statuses: new, processing, shipped, delivered, cancelled

‚∏ª

7. Contact Page (/contact)

Contact form:
	‚Ä¢	Name, Email, Phone, Message
Static Info: Phone, Email, Address, Work hours

‚∏ª

üß† Backend Logic

Data Models

Vehicle

type: 'passenger' | 'commercial' | 'chinese'
vin?: string
make?: string
model?: string
year?: number
engineVolume?: string
fuelType?: string

Part

id: string
name: string
quantity: number
description?: string

ContactInfo

name: string
email: string
phone: string
countryCode: string
city: string
comments?: string

Order

id: string
createdAt: string
updatedAt: string
userId: string
vehicle: Vehicle
parts: Part[]
contactInfo: ContactInfo
status: string

User Profile

id: string
createdAt: string
email: string
fullName?: string
phone?: string



‚∏ª

Order Placement Flow
	1.	Fill multi-step form
	2.	Validate step-by-step
	3.	On submit:
	‚Ä¢	If guest: auto-register & login
	‚Ä¢	Save order
	‚Ä¢	Show success dialog
	‚Ä¢	Redirect to dashboard

‚∏ª

Notifications

Toast system for:
	‚Ä¢	Success messages
	‚Ä¢	Form errors
	‚Ä¢	Status feedback (e.g., ‚ÄúOrder submitted‚Äù, ‚ÄúPhone invalid‚Äù)

‚∏ª

üß± Additional Notes
	‚Ä¢	UI can be used from existing site (link pages/screenshots)
	‚Ä¢	Prioritize correct logic, clean component structure, and working backend
	‚Ä¢	All content in Russian
	‚Ä¢	Mobile responsiveness required